/* 
*
* Standard, glass-like look with blurred backdrop
*
*/
.glass {
  color: white;
  text-shadow: 0 0 1tick var(--more-dark);

  background-color: var(--dark);
  border: 0.5tick solid var(--light);
  border-radius: 2tick;
  box-shadow: 0 1tick 1tick var(--less-dark);

  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
  background-blend-mode: darken;

  &:is(:hover, :focus-within) {
    z-index: 999;
  }

  &:focus-within {
    border-color: white;
  }

  &__white {
    background-color: var(--light);
  }
}

/* 
*
* Styling for buttons within .glass elements
*
*/
.glass :is(.glass-button, .glass-input) {
  --interact-highlight: var(--less-dark);

  color: inherit;
  background: none;
  border: none;
  outline: none;

  &.glass-button:not(.node-label-container) {
    padding: 2tick 4tick;
    cursor: pointer;

    & * {
      pointer-events: none;
    }
  }

  &,
  & svg {
    transition: 0.1s ease;
  }
  &.glass-button:is(:hover, :focus-within):not(:active),
  &.glass-input .glass-input__inner:not([readonly]):is(:hover, :focus-within) {
    background: var(--interact-highlight);

    &.fade-to-right {
      background: linear-gradient(to right, var(--interact-highlight), transparent);
    }
    &.fade-to-left {
      background: linear-gradient(to left, var(--interact-highlight), transparent);
    }

    & svg {
      transform: scale(1.1);
    }
  }

  & > svg {
    &:first-child:not(:last-child) {
      margin-right: 1ch;
    }
    &:last-child:not(:first-child) {
      margin-left: 1ch;
    }
  }
}
.glass__white :is(.glass-button, .glass-input) {
  --interact-highlight: var(--less-light);
}
